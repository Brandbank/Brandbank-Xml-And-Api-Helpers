//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Brandbank.Api.UploadData {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserCredentialHeader", Namespace="http://www.brandbank.com/WebServices/DataImport/2010/03")]
    [System.SerializableAttribute()]
    public partial class UserCredentialHeader : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid UserCredentialField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid UserCredential {
            get {
                return this.UserCredentialField;
            }
            set {
                if ((this.UserCredentialField.Equals(value) != true)) {
                    this.UserCredentialField = value;
                    this.RaisePropertyChanged("UserCredential");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UploadResponse", Namespace="http://schemas.datacontract.org/2004/07/Brandbank.Import.UploadService")]
    [System.SerializableAttribute()]
    public partial class UploadResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FilesReceivedCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Brandbank.Api.UploadData.Message[] MessagesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ReceiptIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Brandbank.Api.UploadData.UploadResponse.UploadStatuses StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TimestampField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FilesReceivedCount {
            get {
                return this.FilesReceivedCountField;
            }
            set {
                if ((this.FilesReceivedCountField.Equals(value) != true)) {
                    this.FilesReceivedCountField = value;
                    this.RaisePropertyChanged("FilesReceivedCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Brandbank.Api.UploadData.Message[] Messages {
            get {
                return this.MessagesField;
            }
            set {
                if ((object.ReferenceEquals(this.MessagesField, value) != true)) {
                    this.MessagesField = value;
                    this.RaisePropertyChanged("Messages");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ReceiptId {
            get {
                return this.ReceiptIdField;
            }
            set {
                if ((this.ReceiptIdField.Equals(value) != true)) {
                    this.ReceiptIdField = value;
                    this.RaisePropertyChanged("ReceiptId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Brandbank.Api.UploadData.UploadResponse.UploadStatuses Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Timestamp {
            get {
                return this.TimestampField;
            }
            set {
                if ((this.TimestampField.Equals(value) != true)) {
                    this.TimestampField = value;
                    this.RaisePropertyChanged("Timestamp");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="UploadResponse.UploadStatuses", Namespace="http://schemas.datacontract.org/2004/07/Brandbank.Import.UploadService")]
        public enum UploadStatuses : int {
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Success = 1,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Fail = 2,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Unavailable = 3,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Pending = 4,
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Message", Namespace="http://schemas.datacontract.org/2004/07/Brandbank.Import.UploadService")]
    [System.SerializableAttribute()]
    public partial class Message : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Brandbank.Api.UploadData.Message.MessageTypes MessageTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TextField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Code {
            get {
                return this.CodeField;
            }
            set {
                if ((this.CodeField.Equals(value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Brandbank.Api.UploadData.Message.MessageTypes MessageType {
            get {
                return this.MessageTypeField;
            }
            set {
                if ((this.MessageTypeField.Equals(value) != true)) {
                    this.MessageTypeField = value;
                    this.RaisePropertyChanged("MessageType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Text {
            get {
                return this.TextField;
            }
            set {
                if ((object.ReferenceEquals(this.TextField, value) != true)) {
                    this.TextField = value;
                    this.RaisePropertyChanged("Text");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="Message.MessageTypes", Namespace="http://schemas.datacontract.org/2004/07/Brandbank.Import.UploadService")]
        public enum MessageTypes : int {
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Information = 0,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Warning = 1,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Error = 2,
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://www.brandbank.com/WebServices/DataImport/2010/03", ConfigurationName="UploadData.IUpload")]
    public interface IUpload {
        
        // CODEGEN: Generating message contract since message UploadStreamRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.brandbank.com/WebServices/DataImport/2010/03/IUpload/UploadStream", ReplyAction="http://www.brandbank.com/WebServices/DataImport/2010/03/IUpload/UploadStreamRespo" +
            "nse")]
        Brandbank.Api.UploadData.UploadStreamResponse UploadStream(Brandbank.Api.UploadData.UploadStreamRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.brandbank.com/WebServices/DataImport/2010/03/IUpload/UploadStream", ReplyAction="http://www.brandbank.com/WebServices/DataImport/2010/03/IUpload/UploadStreamRespo" +
            "nse")]
        System.Threading.Tasks.Task<Brandbank.Api.UploadData.UploadStreamResponse> UploadStreamAsync(Brandbank.Api.UploadData.UploadStreamRequest request);
        
        // CODEGEN: Generating message contract since message UploadZipRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.brandbank.com/WebServices/DataImport/2010/03/IUpload/UploadZip", ReplyAction="http://www.brandbank.com/WebServices/DataImport/2010/03/IUpload/UploadZipResponse" +
            "")]
        Brandbank.Api.UploadData.UploadZipResponse UploadZip(Brandbank.Api.UploadData.UploadZipRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.brandbank.com/WebServices/DataImport/2010/03/IUpload/UploadZip", ReplyAction="http://www.brandbank.com/WebServices/DataImport/2010/03/IUpload/UploadZipResponse" +
            "")]
        System.Threading.Tasks.Task<Brandbank.Api.UploadData.UploadZipResponse> UploadZipAsync(Brandbank.Api.UploadData.UploadZipRequest request);
        
        // CODEGEN: Generating message contract since message GetUploadResponseRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.brandbank.com/WebServices/DataImport/2010/03/IUpload/GetUploadResponse" +
            "", ReplyAction="http://www.brandbank.com/WebServices/DataImport/2010/03/IUpload/GetUploadResponse" +
            "Response")]
        Brandbank.Api.UploadData.GetUploadResponseResponse GetUploadResponse(Brandbank.Api.UploadData.GetUploadResponseRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.brandbank.com/WebServices/DataImport/2010/03/IUpload/GetUploadResponse" +
            "", ReplyAction="http://www.brandbank.com/WebServices/DataImport/2010/03/IUpload/GetUploadResponse" +
            "Response")]
        System.Threading.Tasks.Task<Brandbank.Api.UploadData.GetUploadResponseResponse> GetUploadResponseAsync(Brandbank.Api.UploadData.GetUploadResponseRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UploadStream", WrapperNamespace="http://www.brandbank.com/WebServices/DataImport/2010/03", IsWrapped=true)]
    public partial class UploadStreamRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.brandbank.com/WebServices/DataImport/2010/03")]
        public Brandbank.Api.UploadData.UserCredentialHeader UserCredentialHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.brandbank.com/WebServices/DataImport/2010/03", Order=0)]
        public System.IO.Stream stream;
        
        public UploadStreamRequest() {
        }
        
        public UploadStreamRequest(Brandbank.Api.UploadData.UserCredentialHeader UserCredentialHeader, System.IO.Stream stream) {
            this.UserCredentialHeader = UserCredentialHeader;
            this.stream = stream;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UploadStreamResponse", WrapperNamespace="http://www.brandbank.com/WebServices/DataImport/2010/03", IsWrapped=true)]
    public partial class UploadStreamResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.brandbank.com/WebServices/DataImport/2010/03", Order=0)]
        public Brandbank.Api.UploadData.UploadResponse UploadStreamResult;
        
        public UploadStreamResponse() {
        }
        
        public UploadStreamResponse(Brandbank.Api.UploadData.UploadResponse UploadStreamResult) {
            this.UploadStreamResult = UploadStreamResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UploadZip", WrapperNamespace="http://www.brandbank.com/WebServices/DataImport/2010/03", IsWrapped=true)]
    public partial class UploadZipRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.brandbank.com/WebServices/DataImport/2010/03")]
        public Brandbank.Api.UploadData.UserCredentialHeader UserCredentialHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.brandbank.com/WebServices/DataImport/2010/03", Order=0)]
        public System.IO.Stream zipStream;
        
        public UploadZipRequest() {
        }
        
        public UploadZipRequest(Brandbank.Api.UploadData.UserCredentialHeader UserCredentialHeader, System.IO.Stream zipStream) {
            this.UserCredentialHeader = UserCredentialHeader;
            this.zipStream = zipStream;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UploadZipResponse", WrapperNamespace="http://www.brandbank.com/WebServices/DataImport/2010/03", IsWrapped=true)]
    public partial class UploadZipResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.brandbank.com/WebServices/DataImport/2010/03", Order=0)]
        public Brandbank.Api.UploadData.UploadResponse UploadZipResult;
        
        public UploadZipResponse() {
        }
        
        public UploadZipResponse(Brandbank.Api.UploadData.UploadResponse UploadZipResult) {
            this.UploadZipResult = UploadZipResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetUploadResponse", WrapperNamespace="http://www.brandbank.com/WebServices/DataImport/2010/03", IsWrapped=true)]
    public partial class GetUploadResponseRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.brandbank.com/WebServices/DataImport/2010/03")]
        public Brandbank.Api.UploadData.UserCredentialHeader UserCredentialHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.brandbank.com/WebServices/DataImport/2010/03", Order=0)]
        public System.Guid receiptId;
        
        public GetUploadResponseRequest() {
        }
        
        public GetUploadResponseRequest(Brandbank.Api.UploadData.UserCredentialHeader UserCredentialHeader, System.Guid receiptId) {
            this.UserCredentialHeader = UserCredentialHeader;
            this.receiptId = receiptId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetUploadResponseResponse", WrapperNamespace="http://www.brandbank.com/WebServices/DataImport/2010/03", IsWrapped=true)]
    public partial class GetUploadResponseResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.brandbank.com/WebServices/DataImport/2010/03", Order=0)]
        public Brandbank.Api.UploadData.UploadResponse GetUploadResponseResult;
        
        public GetUploadResponseResponse() {
        }
        
        public GetUploadResponseResponse(Brandbank.Api.UploadData.UploadResponse GetUploadResponseResult) {
            this.GetUploadResponseResult = GetUploadResponseResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IUploadChannel : Brandbank.Api.UploadData.IUpload, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UploadClient : System.ServiceModel.ClientBase<Brandbank.Api.UploadData.IUpload>, Brandbank.Api.UploadData.IUpload {
        
        public UploadClient() {
        }
        
        public UploadClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public UploadClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UploadClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UploadClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Brandbank.Api.UploadData.UploadStreamResponse Brandbank.Api.UploadData.IUpload.UploadStream(Brandbank.Api.UploadData.UploadStreamRequest request) {
            return base.Channel.UploadStream(request);
        }
        
        public Brandbank.Api.UploadData.UploadResponse UploadStream(Brandbank.Api.UploadData.UserCredentialHeader UserCredentialHeader, System.IO.Stream stream) {
            Brandbank.Api.UploadData.UploadStreamRequest inValue = new Brandbank.Api.UploadData.UploadStreamRequest();
            inValue.UserCredentialHeader = UserCredentialHeader;
            inValue.stream = stream;
            Brandbank.Api.UploadData.UploadStreamResponse retVal = ((Brandbank.Api.UploadData.IUpload)(this)).UploadStream(inValue);
            return retVal.UploadStreamResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Brandbank.Api.UploadData.UploadStreamResponse> Brandbank.Api.UploadData.IUpload.UploadStreamAsync(Brandbank.Api.UploadData.UploadStreamRequest request) {
            return base.Channel.UploadStreamAsync(request);
        }
        
        public System.Threading.Tasks.Task<Brandbank.Api.UploadData.UploadStreamResponse> UploadStreamAsync(Brandbank.Api.UploadData.UserCredentialHeader UserCredentialHeader, System.IO.Stream stream) {
            Brandbank.Api.UploadData.UploadStreamRequest inValue = new Brandbank.Api.UploadData.UploadStreamRequest();
            inValue.UserCredentialHeader = UserCredentialHeader;
            inValue.stream = stream;
            return ((Brandbank.Api.UploadData.IUpload)(this)).UploadStreamAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Brandbank.Api.UploadData.UploadZipResponse Brandbank.Api.UploadData.IUpload.UploadZip(Brandbank.Api.UploadData.UploadZipRequest request) {
            return base.Channel.UploadZip(request);
        }
        
        public Brandbank.Api.UploadData.UploadResponse UploadZip(Brandbank.Api.UploadData.UserCredentialHeader UserCredentialHeader, System.IO.Stream zipStream) {
            Brandbank.Api.UploadData.UploadZipRequest inValue = new Brandbank.Api.UploadData.UploadZipRequest();
            inValue.UserCredentialHeader = UserCredentialHeader;
            inValue.zipStream = zipStream;
            Brandbank.Api.UploadData.UploadZipResponse retVal = ((Brandbank.Api.UploadData.IUpload)(this)).UploadZip(inValue);
            return retVal.UploadZipResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Brandbank.Api.UploadData.UploadZipResponse> Brandbank.Api.UploadData.IUpload.UploadZipAsync(Brandbank.Api.UploadData.UploadZipRequest request) {
            return base.Channel.UploadZipAsync(request);
        }
        
        public System.Threading.Tasks.Task<Brandbank.Api.UploadData.UploadZipResponse> UploadZipAsync(Brandbank.Api.UploadData.UserCredentialHeader UserCredentialHeader, System.IO.Stream zipStream) {
            Brandbank.Api.UploadData.UploadZipRequest inValue = new Brandbank.Api.UploadData.UploadZipRequest();
            inValue.UserCredentialHeader = UserCredentialHeader;
            inValue.zipStream = zipStream;
            return ((Brandbank.Api.UploadData.IUpload)(this)).UploadZipAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Brandbank.Api.UploadData.GetUploadResponseResponse Brandbank.Api.UploadData.IUpload.GetUploadResponse(Brandbank.Api.UploadData.GetUploadResponseRequest request) {
            return base.Channel.GetUploadResponse(request);
        }
        
        public Brandbank.Api.UploadData.UploadResponse GetUploadResponse(Brandbank.Api.UploadData.UserCredentialHeader UserCredentialHeader, System.Guid receiptId) {
            Brandbank.Api.UploadData.GetUploadResponseRequest inValue = new Brandbank.Api.UploadData.GetUploadResponseRequest();
            inValue.UserCredentialHeader = UserCredentialHeader;
            inValue.receiptId = receiptId;
            Brandbank.Api.UploadData.GetUploadResponseResponse retVal = ((Brandbank.Api.UploadData.IUpload)(this)).GetUploadResponse(inValue);
            return retVal.GetUploadResponseResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Brandbank.Api.UploadData.GetUploadResponseResponse> Brandbank.Api.UploadData.IUpload.GetUploadResponseAsync(Brandbank.Api.UploadData.GetUploadResponseRequest request) {
            return base.Channel.GetUploadResponseAsync(request);
        }
        
        public System.Threading.Tasks.Task<Brandbank.Api.UploadData.GetUploadResponseResponse> GetUploadResponseAsync(Brandbank.Api.UploadData.UserCredentialHeader UserCredentialHeader, System.Guid receiptId) {
            Brandbank.Api.UploadData.GetUploadResponseRequest inValue = new Brandbank.Api.UploadData.GetUploadResponseRequest();
            inValue.UserCredentialHeader = UserCredentialHeader;
            inValue.receiptId = receiptId;
            return ((Brandbank.Api.UploadData.IUpload)(this)).GetUploadResponseAsync(inValue);
        }
    }
}
